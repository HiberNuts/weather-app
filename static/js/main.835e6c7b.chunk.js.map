{"version":3,"sources":["app_component/form.component.jsx","app_component/weather.component.jsx","App.js","index.js"],"names":["error","props","className","role","Form","onSubmit","loadweather","type","placeholder","name","autoComplete","Weather","cityname","weatherIcon","temp_celsius","maxminTemp","temp_min","temp_max","description","charAt","toUpperCase","slice","min","max","App","getWeather","e","a","preventDefault","country","target","elements","value","city","fetch","api_call","json","response","setState","sys","main","weather","celsius","calCelsius","temp","get_WeatherIcon","id","console","log","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","this","Math","floor","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.835e6c7b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form.style.css\";\n\nconst Form = props => {\n  return (\n    <div className=\"container h-100\">\n      <form onSubmit={props.loadweather}>\n        <div>{props.error ? error() : \"\"}</div>\n        <div className=\"row\">\n          <div className=\"col-md-3 offset-md-2\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"City\"\n              name=\"city\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Country\"\n              name=\"country\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"col-md-3 mt-md-0 mt-2 text-md-left \">\n            <button className=\"btn btn-warning\">Get Weather</button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst error = props => {\n  return (\n    <div className=\"alert alert-danger mx-5\" role=\"alert\">\n      Please Enter City and Country...!\n    </div>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\nimport \"./weather.style.css\";\n\nconst Weather = props => {\n  return (\n    <div className=\"container text-light\">\n      <div className=\"Card\">\n        <h1 className=\"text-white py-3\">{props.cityname}</h1>\n        <h5 className=\"py-4\">\n          <i className={`wi ${props.weatherIcon} display-1`} />\n        </h5>\n\n        {/* Get Celsius */}\n        {props.temp_celsius ? (\n          <h1 className=\"py-2\">{props.temp_celsius}&deg;</h1>\n        ) : null}\n\n        {/* show max and min temp */}\n        {maxminTemp(props.temp_min, props.temp_max)}\n\n        {/* Weather description */}\n        <h4 className=\"py-3\">\n          {props.description.charAt(0).toUpperCase() +\n            props.description.slice(1)}\n        </h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n\nfunction maxminTemp(min, max) {\n  if (max && min) {\n    return (\n      <h3>\n        <span className=\"px-4\">{min}&deg;</span>\n        <span className=\"px-4\">{max}&deg;</span>\n      </h3>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./app_component/form.component\";\nimport Weather from \"./app_component/weather.component\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\n// git project https://github.com/erikflowers/weather-icons\nimport \"weather-icons/css/weather-icons.css\";\n\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false,\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\",\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false,\n      });\n\n      // seting icons\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          cityname={this.state.city}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}